#!/usr/bin/env bash
set -e
set -o pipefail

script_dir="$(dirname $0)"
stage="dev"

function compose() { "$script_dir/docker/compose" $stage $@; }
function postgres_command() {
    name=$(echo $stage | tr -d ".")
    docker exec -it "wust${name}_wust-postgres_1" "$@"
}
override_sbt_args="${@:2}" # all remaining arguments starting at 2
function sbt_with_args() {
    args="${@:1}"
    [ -n "$override_sbt_args" ] && args="$override_sbt_args"

    sbt -Dquill.macro.log=false $args
}
function run_db_migration() {
    compose run wust-db-migration
    # compose run github-db-migration
}


env_wust_secret="WUST_AUTH_SECRET=secret"
env_wust_local="WUST_HOSTNAME=localhost WUST_USER=wust WUST_PASSWORD=wust"
env_postgres_secret="POSTGRES_PASSWORD=test"
env_postgres_local="POSTGRES_HOSTNAME=localhost POSTGRES_USER=wust POSTGRES_DB=wust"

env_wust_backendport="WUST_BACKEND_PORT=${WUST_BACKEND_PORT:-8080}"
env_wust_devport="WUST_DEVSERVER_PORT=${WUST_DEVSERVER_PORT:-12345}"
env_wust_devcomp="WUST_DEVSERVER_COMPRESS=${WUST_DEVSERVER_COMPRESS:-false}"

if [[ -f tokens.sh ]]; then
    source tokens.sh
fi

echo "Starting with parameters"
echo -e "\tBackend Port:\t\t\e[1m\e[32m$env_wust_backendport\e[0m"
echo -e "\tDevServer Port:\t\t\e[1m\e[32m$env_wust_devport\e[0m"
echo -e "\tDevServer Compression:\t\e[1m\e[32m$env_wust_devcomp\e[0m"

function self() {
    case "$1" in
    psql)
        # PGPASSWORD=test psql -h localhost -U wust
        postgres_command psql -h localhost -U wust ${@:2}
        ;;
    pgdump)
        postgres_command pg_dump --clean -h localhost -U wust > $(date +"%F-%H-%M-%S-dev-postgres-backup.sql")
        ;;
    pgrestore)
        postgres_command psql --single-transaction --set ON_ERROR_STOP=on -h localhost -U wust --file=- < $2
        ;;
    pgclean)
        postgres_command psql -h localhost -U wust -c "DROP SCHEMA public CASCADE; CREATE SCHEMA public;"
        ;;
    sbt)
        export $env_postgres_secret $env_wust_secret $env_postgres_local $env_wust_local $env_wust_devport $env_wust_backendport $env_wust_devcomp
        compose up -d wust-postgres wust-db-migration github-redis
        sbt_with_args
        ;;
    migrate)
        export $env_postgres_secret
        CI=true sbt dbMigration/docker
        run_db_migration
        ;;
    test)
        sbt docker
        sbt_with_args test
        self test.postgres
        self test.integration
        ;;
    test.postgres)
        stage="test.postgres"
        compose down
        run_db_migration
        compose run test-wust-postgres
        compose down
        ;;
    test.integration)
        stage="test.integration"
        # POSTGRES_POST 5431 for travis, as default port 5432 is already in use
        export $env_postgres_secret $env_wust_secret $env_postgres_local POSTGRES_PORT=5431
        compose rm -f -v
        compose up -d --force-recreate
        run_db_migration
        postgres_command psql -U postgres --command="DROP DATABASE IF EXISTS wust_template"
        postgres_command psql -U postgres --command="CREATE DATABASE wust_template TEMPLATE wust"
        CI=true sbt_with_args coverage it:test coverageReport
        compose down
        ;;
    *)
        cat <<EOF
    unknown option '$1', expected one of:

    sbt
    migrate

    psql [options]
    pgdump
    pgrestore file
    pgclean

    test
    test.postgres
    test.integration
EOF
        exit 1

    esac
}

self "$1"
